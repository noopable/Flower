<?php

namespace FlowerTest\Sandbox;
/*
 *
 *
 * @copyright Copyright (c) 2013-2014 KipsProduction (http://www.kips.gr.jp)
 * @license   http://www.kips.gr.jp/newbsd/LICENSE.txt New BSD License
 */
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-05 at 13:18:14.
 */
class ArrayUtilsTest extends \PHPUnit_Framework_TestCase {

    protected $breakOnFailure = false;
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * 
     * @dataProvider provideArrays
     */
    public function testArrayConvert() {
        $args = func_get_args();
        array_splice($args, 2);
        $breakOnFailure = $this->breakOnFailure;
        $arrays = array_map(    
            function ($v) use ($breakOnFailure) {
                if (is_array($v)) {
                    return $v;
                }
                
                if ($breakOnFailure) {
                    return array();
                }
                
                if (is_scalar($v)) {
                    return array($v);
                }
                if (is_object($v)) {
                    if (method_exists($v, 'toArray')) {
                        return $v->toArray();
                    }
                    if ($v instanceof \Traversable) {
                        return ArrayUtils::iteratorToArray($v);
                    }
                }
                return array();
            },
            $args
        );
        
        foreach ($args as $key => $val) {
            if (null === $val) {
                $args[$key] = array();
            }
            
            if (is_object($val) && $val instanceof \Zend\Config\Config) {
                $args[$key] = $val->toArray();
            }
        }
        $this->assertEquals($args, $arrays);
    }
    
    public function provideArrays()
    {
        return array(
            array(null, ['foo']),
            array(['bar'], ['baz']),
            array(new \Zend\Config\Config(array()), []),
        );
    }
    


}
