<?php
namespace Flower\AccessControl\RoleMapper;

use Flower\AccessControl\RoleMapper\RolePrefixFilter;
use Flower\Test\TestTool;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-21 at 14:25:29.
 */
class RolePrefixFilterTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var RolePrefixFilter
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new RolePrefixFilter;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Flower\AccessControl\RoleMapper\RolePrefixFilter::__invoke
     * @todo   Implement test__invoke().
     */
    public function test__invoke()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Flower\AccessControl\RoleMapper\RolePrefixFilter::setPrefix
     */
    public function testSetPrefix()
    {
        $prefix = 'foo';
        $this->object->setPrefix($prefix);
        $this->assertEquals($prefix, TestTool::getPropertyValue($this->object, 'prefix'));
    }

    /**
     * @depends testSetPrefix
     * @covers Flower\AccessControl\RoleMapper\RolePrefixFilter::getPrefix
     */
    public function testGetPrefix()
    {
        $this->assertEquals('global', $this->object->getPrefix());
        $prefix = 'foo';
        $this->object->setPrefix($prefix);
        $this->assertEquals($prefix, $this->object->getPrefix());
    }
    
    /**
     * @depends testSetPrefix
     * @covers Flower\AccessControl\RoleMapper\RolePrefixFilter::addPrefixToRole
     */
    public function testAddPrefixToRole()
    {
        $prefix = 'foo';
        $role = 'admin';
        $this->object->setPrefix($prefix);
        $expects = $prefix . TestTool::getPropertyValue($this->object, 'delimiter') . $role;
        $this->assertEquals($expects, $this->object->addPrefixToRole($role));
    }
    
    /**
     * @depends testAddPrefixToRole
     * @covers Flower\AccessControl\RoleMapper\RolePrefixFilter::mapAddPrefix
     */
    public function testMapAddPrefix()
    {
        $roles = array('foo', 'bar');
        $prefix = 'pre';
        $this->object->setPrefix($prefix);
        $this->assertEquals(array('pre.foo', 'pre.bar'), $this->object->mapAddPrefix($roles));
    }
    
    /**
     * @covers Flower\AccessControl\RoleMapper\RolePrefixFilter::filterWithPrefix
     * @todo   Implement testFilterWithPrefix().
     */
    public function testFilterWithPrefix()
    {
        $prefix = 'pre';
        $roles = array('pre.foo', 'pre.bar', 'baz', 'other.qux');
        $this->object->setPrefix($prefix);
        $this->assertEquals(array('pre.foo', 'pre.bar'), $this->object->filterWithPrefix($roles));
    }
}
