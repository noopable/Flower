<?php
namespace FlowerTest\AccessControl;

use Flower\AccessControl\AclLoader;
use Flower\Test\TestTool;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-14 at 21:54:33.
 */
class AclLoaderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var AclLoader
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $script = __DIR__ . '/TestAsset/acl.script.php';
        $this->object = new AclLoader($script);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Flower\AccessControl\AclLoader::load
     */
    public function testLoad()
    {

        $result = $this->object->load();
        $this->assertInstanceOf('Zend\Permissions\Acl\Acl', $result);
        return $result;
    }

    public function testLoadWithVars()
    {
        $this->object->setVars(array('foo' => 'bar'));
        $result = $this->object->load();
        $this->assertInstanceOf('Zend\Permissions\Acl\Acl', $result);
        $this->assertTrue($result->hasRole('bar'));
    }

    /**
     * @covers Flower\AccessControl\AclLoader::setAcl
     */
    public function testSetAcl()
    {
        $acl = new \Zend\Permissions\Acl\Acl;
        $this->object->setAcl($acl);
        $this->assertSame($acl, TestTool::getPropertyValue($this->object, '__acl'));
    }

    /**
     * @covers Flower\AccessControl\AclLoader::resetAcl
     */
    public function resetAcl()
    {
        //default object
        $this->assertInstanceOf('Zend\Permissions\Acl\Acl', $this->object->resetAcl());
    }

    /**
     * @depends testSetAcl
     * @covers Flower\AccessControl\AclLoader::getAcl
     */
    public function testGetAcl()
    {
        //default object
        $this->assertInstanceOf('Zend\Permissions\Acl\Acl', $this->object->getAcl());

        //set object
        $acl = new \Zend\Permissions\Acl\Acl;
        $this->object->setAcl($acl);
        $this->assertSame($acl, $this->object->getAcl());
    }

    /**
     * @depends testLoad
     * @covers Flower\AccessControl\AclLoader::__invoke
     */
    public function test__invoke()
    {
        $result = call_user_func($this->object);
        $this->assertInstanceOf('Zend\Permissions\Acl\Acl', $result);
    }
}
