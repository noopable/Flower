<?php
namespace FlowerTest\EventManager\Listener;

use Flower\EventManager\Listener\CallbackSharedListenerAggregate;
use Flower\Test\TestTool;
use Zend\EventManager\SharedEventManager;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-26 at 10:27:38.
 */
class CallbackSharedListenerAggregateTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var CallbackSharedListenerAggregate
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new CallbackSharedListenerAggregate;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Flower\EventManager\Listener\CallbackSharedListenerAggregate::addCallback
     */
    public function testAddCallback()
    {
        $identifier = 'foo';
        $event = 'update';
        $callback = function () {return;};
        $this->object->addCallback($identifier, $event, $callback);
        $expected = array($identifier => array($event => array($callback)));
        $this->assertEquals($expected, TestTool::getPropertyValue($this->object, 'callbacks'));
    }

    /**
     * @covers Flower\EventManager\Listener\CallbackSharedListenerAggregate::removeCallback
     */
    public function testRemoveCallback()
    {
        $identifier = 'foo';
        $event = 'update';
        $callback = function () {return;};
        $this->object->addCallback($identifier, $event, $callback);
        $expected = array($identifier => array($event => array($callback)));
        $this->assertEquals($expected, TestTool::getPropertyValue($this->object, 'callbacks'));
        $this->object->removeCallback($identifier, $event, $callback);
        $expected = array($identifier => array($event => array()));
        $this->assertEquals($expected, TestTool::getPropertyValue($this->object, 'callbacks'));
    }

    /**
     * @covers Flower\EventManager\Listener\CallbackSharedListenerAggregate::attachShared
     */
    public function testAttachShared()
    {
        $identifier = 'foo';
        $event = 'update';
        $callback = function () {return;};
        $this->object->addCallback($identifier, $event, $callback);
        $sharedEventManager = new SharedEventManager;
        $this->object->attachShared($sharedEventManager);
        $this->assertCount(1, $sharedEventManager->getListeners($identifier, $event));
        $listeners = TestTool::getPropertyValue($this->object, 'listeners');
        $this->assertInstanceOf('Zend\Stdlib\CallbackHandler', $listeners[$identifier][0]);
    }

    /**
     * @covers Flower\EventManager\Listener\CallbackSharedListenerAggregate::detachShared
     */
    public function testDetachShared()
    {
        $identifier = 'foo';
        $event = 'update';
        $callback = function () {return;};
        $this->object->addCallback($identifier, $event, $callback);
        $sharedEventManager = new SharedEventManager;
        $this->object->attachShared($sharedEventManager);
        $this->assertCount(1, $sharedEventManager->getListeners($identifier, $event));
        $this->object->detachShared($sharedEventManager);
        $listeners = TestTool::getPropertyValue($this->object, 'listeners');
        $this->assertEmpty($listeners[$identifier]);
        $this->assertCount(0, $sharedEventManager->getListeners($identifier, $event));
    }
}
