<?php
namespace Flower\View\Pane\Factory;

use Flower\View\Pane\Factory\AnchorPaneFactory;
use Flower\View\Pane\Builder\Builder;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-04 at 09:15:18.
 */
class AnchorHelperFactoryTest extends \PHPUnit_Framework_TestCase
{
    public function testFactoryStandardTest()
    {
        $builder = new Builder(array('pane_class' => 'Flower\View\Pane\PaneClass\Anchor'));
        $paneConfig = array(
            'tag' => $tag = 'foo',
            'id' => $id = '30-cc2',
            'name' => $name = '30-cc3',
            'order' => $order = 5,
            'size' => $size = 10,
            'var' => $var = 'header',
            'route' => $route = 'home',
            'controller' => $controller = 'index',
            'action' => $action = 'list',
            'params' => $params = array(
                'foo' => 'bar',
            ),
            'classes' => $classes = 'container row',
            'attributes' => $attributes = array(
                'foo' => 'bar',
                'baz' => 'qux',
            ),
        );

        $pane = AnchorPaneFactory::factory($paneConfig, $builder);
        $this->assertInstanceOf('Flower\View\Pane\PaneClass\Anchor', $pane);
        $this->assertEquals($tag, $pane->tag);
        $this->assertEquals('li', $pane->wrapTag, 'if wrapTag is omitted ,wrapTag is default value');
        $this->assertEquals('cc2', $pane->id);
        $this->assertEquals($name, $pane->name);
        $this->assertEquals($order, $pane->order);
        $this->assertEquals($size, $pane->size);
        $this->assertInternalType('array', $pane->var, 'Anchor(ListPane) var is callback to self');
        $this->assertEquals($var, $pane->_var);
        $this->assertEquals($route, $pane->route);
        $this->assertEquals($controller, $pane->controller);
        $this->assertEquals($action, $pane->action);
        $this->assertEquals($params, $pane->params);
        $this->assertEquals('<foo foo="bar" baz="qux" href="PaneRenderer%20is%20not%20setFlower%5CView%5CPane%5CPaneClass%5CAnchor%3A%3AgetHrefWithViewHelper" id="cc2" name="30-cc3" class="span10 container row">', trim($pane->begin()));
        $this->assertEquals('<li>', trim($pane->wrapBegin()));
        $this->assertEquals('</foo>', $pane->end());
        $this->assertEquals('</li>', $pane->wrapEnd());
        $this->assertEquals($classes, $pane->classes);
        $attributes['href'] = 'PaneRenderer is not setFlower\View\Pane\PaneClass\Anchor::getHrefWithViewHelper';
        $this->assertEquals($attributes, $pane->attributes);
    }

    public function testFactoryWithHref()
    {
        $builder = new Builder(array('pane_class' => 'Flower\View\Pane\PaneClass\Anchor'));
        $paneConfig = array(
            'href' => $href = '/foo/bar#baz',
        );

        $pane = AnchorPaneFactory::factory($paneConfig, $builder);
        $this->assertInstanceOf('Flower\View\Pane\PaneClass\Anchor', $pane);
        $this->assertEquals($href, $pane->href);
        $this->assertEquals('<a href="/foo/bar#baz">', trim($pane->begin()));
    }
}
