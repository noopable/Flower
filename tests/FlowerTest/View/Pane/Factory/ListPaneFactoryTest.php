<?php
namespace FlowerTest\View\Pane\Factory;

use Flower\Test\TestTool;
use Flower\View\Pane\Factory\ListPaneFactory;
use Flower\View\Pane\PaneClass\ListPane;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-18 at 17:43:11.
 */
class ListPaneFactoryTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @covers Flower\View\Pane\Factory\ListPaneFactory::parseBeginEnd
     */
    public function testParseBeginEnd()
    {
        $pane = new ListPane;
        $pane->tag = 'foo';
        $pane->id = 'bar';
        $pane->name = 'baz';
        $pane->classes = array('container');
        $config = array();
        ListPaneFactory::parseBeginEnd($pane, $config);
        $this->assertEquals('<foo id="bar" name="baz" class="container">', $pane->begin(0));
        $this->assertEquals('</foo>', $pane->end(0));
    }

    public function testParseBeginEndOmitTag()
    {
        $pane = new ListPane;
        $pane->tag = '';
        $pane->id = 'bar';
        $pane->name = 'baz';
        $pane->classes = array('container');
        $config = array();
        ListPaneFactory::parseBeginEnd($pane, $config);
        $this->assertEquals('<!-- start pane -->', $pane->begin(0));
        $this->assertEquals('<!-- end pane -->', $pane->end(0));
    }

    /**
     * @covers Flower\View\Pane\Factory\ListPaneFactory::parseWrapBeginEnd
     */
    public function testParseWrapBeginEnd()
    {
        $pane = new ListPane;
        $pane->wrapTag = 'foo';
        $pane->id = 'bar';
        $pane->name = 'baz';
        $pane->classes = array('container');
        $config = array();
        ListPaneFactory::parseWrapBeginEnd($pane, $config);
        $this->assertEquals('<foo>', $pane->wrapBegin(0));
        $this->assertEquals('</foo>', $pane->wrapEnd(0));
    }

    /**
     * @covers Flower\View\Pane\Factory\ListPaneFactory::parseWrapBeginEnd
     */
    public function testParseWrapBeginEndWithWrapAttributesOption()
    {
        $pane = new ListPane;
        $pane->wrapTag = 'foo';
        $attributes = array(
            'id' => 'bar',
            'name' => 'baz',
            'class' => 'container row',
        );
        $pane->setOption('wrap_attributes', $attributes);
        $config = array();
        ListPaneFactory::parseWrapBeginEnd($pane, $config);
        $this->assertEquals('<foo id="bar" name="baz" class="container row">', $pane->wrapBegin(0));
        $this->assertEquals('</foo>', $pane->wrapEnd(0));
    }

    public function testParseWrapOmitTag()
    {
        $pane = new ListPane;
        $pane->wrapTag = '';
        $config = array();
        ListPaneFactory::parseWrapBeginEnd($pane, $config);
        $this->assertEquals('<!-- start wrap pane -->', $pane->wrapBegin(0));
        $this->assertEquals('<!-- end wrap pane -->', $pane->wrapEnd(0));
    }

    /**
     * @covers Flower\View\Pane\Factory\ListPaneFactory::parseContainerBeginEnd
     */
    public function testParseContainerBeginEnd()
    {
        $pane = new ListPane;
        $pane->containerTag = 'foo';
        $config = array();
        ListPaneFactory::parseContainerBeginEnd($pane, $config);
        $this->assertEquals('<foo>', TestTool::getPropertyValue($pane, 'containerBegin'));
        $this->assertEquals('</foo>', TestTool::getPropertyValue($pane, 'containerEnd'));
    }

    public function testParseContainerBeginEndWithAttributes()
    {
        $pane = new ListPane;
        $pane->containerTag = 'foo';
        $config = array();
        $attributes = array(
            'id' => 'bar',
            'name' => 'baz',
            'class' => 'container row',
        );
        $pane->setOption('container_attributes', $attributes);
        ListPaneFactory::parseContainerBeginEnd($pane, $config);
        $this->assertEquals('<foo id="bar" name="baz" class="container row">', TestTool::getPropertyValue($pane, 'containerBegin'));
        $this->assertEquals('</foo>', TestTool::getPropertyValue($pane, 'containerEnd'));
    }

    public function testParseContainerOmitTag()
    {
        $pane = new ListPane;
        $pane->containerTag = '';
        $config = array();
        ListPaneFactory::parseContainerBeginEnd($pane, $config);
        $this->assertEquals('<!-- start container pane -->', TestTool::getPropertyValue($pane, 'containerBegin'));
        $this->assertEquals('<!-- end container pane -->', TestTool::getPropertyValue($pane, 'containerEnd'));
    }

    /**
     * @covers Flower\View\Pane\Factory\ListPaneFactory::treatment
     */
    public function testTreatment()
    {
        $pane = new ListPane;
        $pane->var = 'foo';
        ListPaneFactory::treatment($pane);
        $this->assertEquals('foo', $pane->_var);
        $this->assertEquals(array($pane, 'render'), $pane->var);
    }
}
