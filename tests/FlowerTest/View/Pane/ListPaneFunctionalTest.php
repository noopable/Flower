<?php
namespace FlowerTest\View\Pane;


use Flower\View\Pane\Builder;
use Flower\View\Pane\ListPaneFactory;
use Flower\View\Pane\PaneRenderer;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-01 at 22:15:54.
 */
class ListPaneTest extends \PHPUnit_Framework_TestCase
{

    protected $builder;

    public function setUp()
    {
        $this->builder = new Builder(array('pane_class' => 'Flower\View\Pane\ListPane'));
    }

    public function testSimple()
    {
        $expected = '
<!-- begin PaneRenderer -->
<ul>
</ul>
<!-- end PaneRenderer -->
';
        $expected = str_replace(array("\n","\r"),'', $expected);
        $paneConfig = array(
            'id' => 'foo',
        );
        $pane = ListPaneFactory::factory($paneConfig, $this->builder);
        $renderer = new PaneRenderer($pane);
        $this->assertEquals($expected, str_replace(array("\n","\r"), '', (string) $renderer));
    }

    public function testSimpleInner()
    {
        $expected = '
<!-- begin PaneRenderer -->
<ul>
  <!-- start content Callable -->
  <li class="main">
  <!-- start content content -->
foo
  <!-- end content content -->
  </li>
  <!-- end content Callable -->
</ul>
<!-- end PaneRenderer -->
';
        $expected = str_replace(array("\n","\r"),'', $expected);
        $paneConfig = array(
            'classes' => 'container',
            'var' => 'foo',
            'inner' => array(
                'classes' => 'main',
                'var' => 'content',
            ));
        $pane = $this->builder->build($paneConfig);
        $this->assertInstanceOf('Flower\View\Pane\ListPane', $pane);
        $renderer = new PaneRenderer($pane);
        $renderer->setVar('content', 'foo');
        $this->assertEquals($expected, str_replace(array("\n","\r"), '', (string) $renderer));
    }

    public function testMultiInner()
    {
        $expected = '
<!-- begin PaneRenderer -->
<ul>
    <!-- start content anchor -->
<a href="foo">bar</a>

    <!-- end content anchor -->
  <li class="main">
  <ul>
    <!-- start content Callable -->
    <li class="main">
    <!-- start content content -->
foo

    <!-- end content content -->
    </li>
    <!-- end content Callable -->
  </ul>
  </li>
</ul>
<!-- end PaneRenderer -->
';
        $expected = str_replace(array("\n","\r"),'', $expected);
        $paneConfig = array(
            'classes' => 'container',
            'var' => 'content',
            'inner' => array(
                'classes' => 'main',
                'var' => 'anchor',
                'inner' => array(
                    'classes' => 'main',
                    'var' => 'content',
                ),
            ),
        );
        $pane = $this->builder->build($paneConfig);
        $this->assertInstanceOf('Flower\View\Pane\ListPane', $pane);
        $renderer = new PaneRenderer($pane);
        $renderer->setVar('content', 'foo');
        $renderer->setVar('anchor', '<a href="foo">bar</a>');
        echo $renderer;
        $this->assertEquals($expected, str_replace(array("\n","\r"), '', (string) $renderer));
    }
}
