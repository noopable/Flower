<?php
namespace FlowerTest\View\Pane\Service;

use Flower\Test\TestTool;
use Flower\View\Pane\Service\ConfigFileListenerFactory;
use FlowerTest\Bootstrap;
use Zend\ServiceManager\ServiceManager;
use Zend\Mvc\Service\ServiceManagerConfig;
use Zend\View\Renderer\PhpRenderer;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-06 at 23:02:41.
 */
class ConfigFileListenerFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ConfigFileListenerFactory
     */
    protected $object;

    protected $serviceLocator;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $config = Bootstrap::getServiceManager()->get('ApplicationConfig');
        $testConfig = require __DIR__ . '/TestAsset/manager_integration.config.php';
        $serviceManager = new ServiceManager(new ServiceManagerConfig($testConfig['service_manager']));
        $config = array_merge($config, $testConfig);
        $serviceManager->setService('ApplicationConfig', $config);
        $serviceManager->get('ModuleManager')->loadModules();
        $serviceManager->get('Application')->bootstrap();
        $this->serviceLocator = $serviceManager;
        $this->helperManager = $this->serviceLocator->get('ViewHelperManager');
        $this->view = new PhpRenderer;
        $this->view->setHelperPluginManager($this->helperManager);
        $this->manager = $this->view->plugin('npPaneManager');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testCanGetPaneManager()
    {
        $this->assertInstanceOf('Flower\View\Pane\PaneManager', $this->manager);
    }

    public function testCanGetPaneInFile()
    {
        $pane = $this->manager->get('foo');
        $this->assertInstanceOf('Flower\View\Pane\PaneClass\PaneInterface', $pane);
        $res = $this->manager->render('foo');
        $expected = '<!-- begin Renderer -->
<div>
</div>
<!-- end Renderer -->
';
        $this->assertEquals(str_replace("\r\n", "\n", $expected), $res);
    }
}
