<?php
namespace FlowerTest\ServiceLayer;

use Flower\Test\TestTool;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-15 at 17:46:28.
 */
class AbstractServiceTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var AbstractService
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new TestAsset\ServiceForTest;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Flower\ServiceLayer\AbstractService::setResourceId
     */
    public function testSetResourceId()
    {
        $this->object->setResourceId('foo');
        $this->assertEquals('foo', TestTool::getPropertyValue($this->object, 'resourceId'));
    }

    /**
     * @depends testSetResourceId
     * @covers Flower\ServiceLayer\AbstractService::getResourceId
     */
    public function testGetResourceId()
    {
        $this->assertEquals('flower_generic_service', $this->object->getResourceId());
        
        $this->object->setResourceId('foo');
        $this->assertEquals('foo', $this->object->getResourceId());
    }

    /**
     * @covers Flower\ServiceLayer\AbstractService::setServiceLocator
     */
    public function testSetServiceLocator()
    {
        $sl = $this->getMock('Zend\ServiceManager\ServiceLocatorInterface');
        $this->object->setServiceLocator($sl);
        $this->assertSame($sl, TestTool::getPropertyValue($this->object, 'serviceLocator'));
    }

    /**
     * @depends testSetServiceLocator
     * @covers Flower\ServiceLayer\AbstractService::getServiceLocator
     */
    public function testGetServiceLocator()
    {
        $sl = $this->getMock('Zend\ServiceManager\ServiceLocatorInterface');
        $this->object->setServiceLocator($sl);
        $this->assertSame($sl, $this->object->getServiceLocator());
    }
    
    /**
     * @covers Flower\ServiceLayer\AbstractService::getMvcServiceLocator
     */
    public function testGetMvcServiceLocatorSimple()
    {
        $sl = new \Zend\ServiceManager\ServiceManager;
        $propRef = TestTool::getPropertyRef($this->object, 'mvcServiceLocator');
        
        $this->object->setServiceLocator($sl);
        $res = $this->object->getMvcServiceLocator();
        $this->assertSame($sl, $res);
        $this->assertSame($sl, $propRef->getValue($this->object));
    }
    
    /**
     * プラグインマネージャーからサービスを育成した場合でも元サービスマネージャーを取得する
     * @covers Flower\ServiceLayer\AbstractService::getMvcServiceLocator
     */
    public function testGetMvcServiceLocator()
    {
        $sl = new \Zend\ServiceManager\ServiceManager;
        $pluginManager = new TestAsset\ConcretePluginManager;
        $pluginManager->setServiceLocator($sl);
        
        $propRef = TestTool::getPropertyRef($this->object, 'mvcServiceLocator');
        
        $this->object->setServiceLocator($pluginManager);
        $res = $this->object->getMvcServiceLocator();
        $this->assertNotSame($pluginManager, $res);
        $this->assertNotSame($pluginManager, $propRef->getValue($this->object));
        $this->assertSame($sl, $res);
        $this->assertSame($sl, $propRef->getValue($this->object));
    }
}
