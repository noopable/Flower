<?php
namespace FlowerTest\ServiceLayer\Events;

use Flower\ServiceLayer\Events\EventsWrapper;
use Flower\Test\TestTool;
use Zend\EventManager\EventManager;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-16 at 13:41:25.
 */
class EventsWrapperTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var EventsWrapper
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new EventsWrapper;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Flower\ServiceLayer\Events\EventsWrapper::getProxyFactory
     */
    public function testGetProxyFactory()
    {
        $this->assertInstanceOf('Flower\ServiceLayer\Events\EventsProxyFactory', $this->object->getProxyFactory());
    }

    /**
     * @covers Flower\ServiceLayer\Events\EventsWrapper::setEventManager
     * @todo   Implement testSetEventManager().
     */
    public function testSetEventManager()
    {
        $eventManager = new EventManager;
        $this->object->setEventManager($eventManager);
        $this->assertSame($eventManager, TestTool::getPropertyValue($this->object, 'events'));
    }
    /**
     * @depends testSetEventManager
     * @covers Flower\ServiceLayer\Events\EventsWrapper::getEventManager
     */
    public function testGetEventManager()
    {
        $eventManager = new EventManager;
        $this->object->setEventManager($eventManager);
        $this->assertSame($eventManager, $this->object->getEventManager());
    }
}
