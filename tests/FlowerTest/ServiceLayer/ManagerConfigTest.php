<?php
namespace FlowerTest\ServiceLayer;

use Flower\ServiceLayer\ManagerConfig;
use Flower\ServiceLayer\ServiceLayerPluginManager;
use Flower\Test\TestTool;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-16 at 19:54:26.
 */
class ManagerConfigTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Flower\ServiceLayer\ManagerConfig::configure
     */
    public function testConfigureWithoutConfig()
    {
        $config = array();
        $oConfig = new ManagerConfig($config);
        $manager = new ServiceLayerPluginManager;
        $oConfig->configure($manager);
    }

    /**
     * @covers Flower\ServiceLayer\ManagerConfig::configure
     */
    public function testConfigureWithEvents()
    {
        $config = array('event_enable' => 1);
        $oConfig = new ManagerConfig($config);
        $manager = new ServiceLayerPluginManager;
        $oConfig->configure($manager);
        $firstWrapper = TestTool::getPropertyValue($manager, 'wrappers')[0];
        $this->assertInstanceOf(
                'Flower\ServiceLayer\Events\EventsWrapper', 
                $firstWrapper
        );
    }
    
    /**
     * @covers Flower\ServiceLayer\ManagerConfig::configure
     */
    public function testConfigureWithEventsInfo()
    {
        $config = array(
            'event_enable' => 1,
            'event_targets' => array(
                'foo', 'bar'
            ),
            'event_target' => 'baz',
        );
        $oConfig = new ManagerConfig($config);
        $manager = new ServiceLayerPluginManager;
        $oConfig->configure($manager);
        $firstWrapper = TestTool::getPropertyValue($manager, 'wrappers')[0];
        $this->assertInstanceOf(
                'Flower\ServiceLayer\Events\EventsWrapper', 
                $firstWrapper
        );
        $this->assertEquals(array('foo' => 'foo', 'bar' => 'bar', 'baz' => 'baz'), TestTool::getPropertyValue($firstWrapper, 'wrapTargets'));
    }
}
